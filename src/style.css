/* style.css */

@import url("./reset.css");

:root {
  /* variables */
  --spacing: 1rem;
  /* debugging */
  * {
    /* outline: solid red 1px; */
  }
}

body {
  background-color: beige;
  padding: var(--spacing);
}

form#form-1 {
  width: max-content;
  margin: auto;

  /* all fieldsets */
  fieldset {
    padding: var(--spacing);
    padding-bottom: calc(0.5 * var(--spacing));
  }

  /* outermost fieldset */
  > fieldset {
    padding: 0;
    padding-bottom: var(--spacing);

    /* password fieldset */
    fieldset:last-child {
      padding-top: 0;
    }
  }

  /* all legends */
  legend {
    margin-left: var(--spacing);

    padding: 0 calc(0.25 * var(--spacing));
  }

  .fields-message {
    display: inline-block;

    padding-left: calc(1.5 * var(--spacing));
    font-style: italic;
    font-size: smaller;

    position: relative;
    bottom: 5px;

    max-width: 25rem;

    /* password requirements list */
    ul {
      list-style-type: none;
      padding-left: var(--spacing);
      margin-bottom: calc(0.75 * var(--spacing));

      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: var(--spacing);
    }
  }

  #required-fields-message {
    color: red;
  }

  /* all fields/inner-fieldsets container */
  .form-field-lines-container {
    margin: var(--spacing);
    margin-top: 0;

    display: grid;
    gap: var(--spacing);

    .form-sub-section {
      display: grid;
      gap: calc(0.5 * var(--spacing));

      .form-field-line {
        .form-field-line-instructions {
          margin-right: var(--spacing);
        }

        /* user input (first sibling of line instructions)  */
        .form-field-line-instructions + * {
          padding: 0 calc(0.2 * var(--spacing));
        }

        .non-error-container {
          display: flex;
          justify-content: end;
        }

        .form-field-line-error-message {
          color: red;
          text-align: end;
          font-style: italic;

          --sizing: 0.85rem;

          height: var(--sizing);
          font-size: var(--sizing);
        }

        /* odd balls */
        #zip-code-input {
          width: 110px;
        }
      }
    }
  }

  #form-1-submit-btn {
    /* margin: 0 var(--spacing); */
    display: block;
    margin-right: calc(0rem + var(--spacing));
    /* margin-right: var(--spacing); */
    margin-left: auto;

    padding: 0 var(--spacing);

    &:hover {
      cursor: pointer;
    }
  }
}

/* ================================= catch alls ================================= */

input,
select,
button {
  border: black solid 1px;

  &:hover,
  &:focus {
    outline: black solid 1px;
  }

  /* add a "touched" class in js to trigger this? */

  &:invalid&.touched {
    border: red solid 1px;

    &:hover,
    &:focus {
      outline: red solid 1px;
    }
  }
}

/* special case: password is not set but confirm password has been touched and has error message */
#confirm-password-input.no-set-password.touched,
#confirm-password-input.no-match-password.touched {
  border: red solid 1px;

  &:hover,
  &:focus {
    outline: red solid 1px;
  }
}

#zip-code-input.no-country-input.touched {
  border: red solid 1px;

  &:hover,
  &:focus {
    outline: red solid 1px;
  }
}
/* special case: password is not set but confirm password has been touched and has error message */
/* same for zip without selection, if no-country-input and touched, then red outline */
